name: Main workflow
on: push
env: # Set the secret as an input
  docker_username: ${{ github.actor }} 
  docker_password: ${{ secrets.GITHUB_TOKEN }} #Nees to be set to be made available to the workflow
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      # - name: Check for lowercase characters in docker_username
      #   run: |
      #     if [[ "${{ env.docker_username }}" =~ [a-z] ]]; then
      #       echo "Your docker_username contains lowercase characters, please use hardcoded, all lowercase as instructed in the docker-image lab"
      #       exit 1
      #     fi
      - name: Check for lowercase characters in docker_username
        if: ${{ env.docker_username }} =~ [a-z]
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Your docker_username contains lowercase characters, please use hardcoded, all lowercase as instructed in the docker-image lab')

      - name: Clone down repository
        uses: actions/checkout@v4
      - name: Build application
        run: ci/build-app.sh
      - name: Test
        run: ci/unit-test-app.sh
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
  Linting:
    runs-on: ubuntu-latest
    needs: 
        - Build
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: run linting
        uses: super-linter/super-linter/slim@v7 
        env:
          DEFAULT_BRANCH: main
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true      
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
    steps:
    - name: Download code
      uses: actions/download-artifact@v4
      with:
        name: code
        path: .
    - name: ls
      run: ls -la ci
    - name: build docker
      run: bash ci/build-docker.sh
    - name: push docker
      run: bash ci/push-docker.sh
