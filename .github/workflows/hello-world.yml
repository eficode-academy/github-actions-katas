name: Java CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env: # Set the secret as an input
  docker_username: ${{ secrets.DOCKER_NAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Clone-down:
    name: Clone down repo
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
    - uses: actions/checkout@v2
    - name: Upload Repo
      uses: actions/upload-artifact@v2
      with:
        name: code
        path: .
  Build: # This is a test
    runs-on: ubuntu-latest
    needs: Clone-down
    container: gradle:6-jdk11
    steps:
    - name: Download code
      uses: actions/download-artifact@v2
      with:
        name: code
        path: . 
    - name: Build with Gradle
      run: chmod +x ci/build-app.sh && ci/build-app.sh
    - name: Test
      run: chmod +x ci/unit-test-app.sh && ci/unit-test-app.sh
    - name: Upload Repo
      uses: actions/upload-artifact@v2
      with:
        name: code
        path: .
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
    - name: Download code
      uses: actions/download-artifact@v1
      with:
        name: code
        path: .
    - name: build docker
      run: chmod +x ci/build-docker.sh && ci/build-docker.sh
    - name: push docker
      run: chmod +x ci/push-docker.sh && ci/push-docker.sh
  Component-test:
    runs-on: [self-hosted]
    needs: Docker-image
    steps:
    - name: Download code
      uses: actions/download-artifact@v1
      with:
        name: code
        path: .
    - name: Execute component test
      run: chmod +x ci/component-test.sh && ci/component-test.sh
  Performance-test:
    runs-on: [self-hosted]
    needs: Docker-image
    steps:
    - name: Download code
      uses: actions/download-artifact@v1
      with:
        name: code
        path: .
    - name: Execute performance test
      run: chmod +x ci/performance-test.sh && ci/performance-test.sh