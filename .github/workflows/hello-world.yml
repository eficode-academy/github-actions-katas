name: Java CI
on: push
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  GET_COMMIT: ${{ github.sha }}
jobs:
  Clone-down:
    name: Clone repository 
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
    - uses: actions/checkout@v2
    - name: Upload repository
      uses: actions/upload-artifact@v2
      with:
        name: code
        path: .
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: Clone-down
    steps:
    - name: Download code
      uses: actions/download-artifact@v2
      with:
        name: code
        path: .
    - name: Build with Gradle
      run: chmod +x ci/build-app.sh && ci/build-app.sh
    - name: Test with Gradle
      run: chmod +x ci/unit-test-app.sh && ci/unit-test-app.sh
    - name: Upload repository
      uses: actions/upload-artifact@v2
      with:
        name: jar code
        path: app/build/libs/app-0.1-all.jar
  Docker-image:
    runs-on: ubuntu-latest
    needs: Build
    steps:
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: code
        path: .
    - name: build docker
      run: chmod +x ci/build-docker.sh && ci/build-docker.sh
    - name: push docker
      run: chmod +x ci/push-docker.sh && ci/push-docker.sh
  # Component-test:
  #   runs-on: ubuntu-latest
  #   needs: Docker-image
  #   steps:
  #   - name: Download code
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: code
  #       path: .
  #   - name: Eecute component-test
  #     run: chmod +x ci/component-test.sh && ci/component-test.sh
  # Performance-test:
  #   runs-on: ubuntu-latest
  #   needs: Docker-image
  #   steps:
  #   - name: Download code
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: code
  #       path: .
  #   - name: Execute Performance-test
  #     run: chmod +x ci/performance-test.sh && ci/performance-test.sh