name: Java CI
on: push

env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  clone-down:
    name: Clone Repo
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone-down
        uses: actions/checkout@v2
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
  build:
    name: Build
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: clone-down
    steps:
      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Build
        run: chmod +x ci/build-app.sh && ci/build-app.sh
      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: clone-down
    steps:
      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Unit Tests
        run: chmod +x ci/unit-test-app.sh && ci/unit-test-app.sh
  docker-image:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: [build,test]
    steps:
      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Docker Build
        run: chmod +x ci/build-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ci/build-docker.sh
      - name: Docker Push
        run: chmod +x ci/push-docker.sh && export GIT_COMMIT="GA-$GITHUB_SHA" && ci/push-docker.sh
  component-test:
    name: Component Test
    runs-on: ubuntu-latest
    needs: docker-image
    steps:
      - name: Download code
        uses: actions/download-artifact@v1
        with:
          name: code
          path: .
      - name: Execute component test
        run: chmod +x ci/component-test.sh && GIT_COMMIT="GA-$GITHUB_SHA" && ci/component-test.sh