name: Main workflow
on: push
env:
  docker_username: ${{ github.actor }} 
  docker_password: ${{ secrets.GITHUB_TOKEN }} #Nees to be set to be made available to the workflow
  GIT_COMMIT: ${{ github.sha }}

jobs:
  lint:
    name: "Lint Code"
    runs-on: ubuntu-latest
    steps:
      - name: "‚§µClone repository"
        uses: actions/checkout@v4

      - name: "Run linter"
        uses: super-linter/super-linter/slim@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true

  build:
    name: "Build Application"
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: "Clone repository"
        uses: actions/checkout@v4

      - name: "Grant execute permission to build script"
        run: chmod +x ci/build-app.sh

      - name: "Build application"
        run: ci/build-app.sh

      - name: "Upload build output artifact"
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .

  test:
    name: "Run Unit Tests"
    runs-on: ubuntu-latest
    needs: build 
    container: gradle:6-jdk11
    steps:
      - name: "Clone repository"
        uses: actions/checkout@v4

      - name: "Download build output"
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: "Grant execute permission to test script"
        run: chmod +x ci/unit-test-app.sh

      - name: "Run tests"
        run: ci/unit-test-app.sh

  publish:
    name: "üê≥ Build and Push Docker Image"
    runs-on: ubuntu-latest
    needs: [test, lint]
    permissions:
      packages: write
    steps:
      - name: "Clone repository"
        uses: actions/checkout@v4

      - name: "Download build output"
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: "Grant execute permission to Docker scripts"
        run: |
          chmod +x ci/build-docker.sh
          chmod +x ci/push-docker.sh

      - name: "Build Docker image"
        run: ci/build-docker.sh

      - name: "Push Docker image"
        run: ci/push-docker.sh